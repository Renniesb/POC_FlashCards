{"version":3,"sources":["components/createDeck.jsx","components/editDeck.jsx","components/viewDecks.jsx","BgTitle.js","components/studyDeck.jsx","deck.js","card.js","App.js","serviceWorker.js","index.js"],"names":["CreateDeck","Container","Row","Col","md","span","offset","className","style","marginTop","marginBottom","htmlFor","name","onChange","e","props","onNewDeckChange","Button","variant","type","onClick","this","onAddDeck","Component","EditDeck","InputGroup","Prepend","Text","FormControl","value","currentDeck","onHandleDeckChange","as","description","cards","map","card","i","key","Card","Header","Body","id","front","onHandleCardChange","aria-label","back","window","confirm","onDeleteCard","icon","faTrash","newCardFront","onNewCardChange","newCardBack","onCardAdd","ViewDecks","decks","deck","Title","length","Footer","marginRight","onEditDeck","faEdit","onDeleteDeck","onStudyDeck","faBook","styled","StudyDeck","state","cardIndex","isFlipped","cardNumber","handleCardChange","target","preventDefault","setState","prevState","flipDirection","BgTitle","minHeight","xs","disabled","marginLeft","Deck","StyledButton","App","addNewDeck","deckName","newDeckName","deckDescription","newDeckDescription","createDeck","newDeck","triggerEditDeckState","addCardToDeck","index","indexOf","createCard","newCard","copyOfCurrentDeck","push","deleteDeck","filter","d","deleteCard","c","handleNewValuesAdded","event","handleDeckChange","deckChanged","index2","isCreateState","isEditDeckState","isViewDecksState","isStudyDeckState","triggerCreateState","triggerStudyDeckState","triggerViewDecksState","document","title","Alert","React","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e28e98c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport {Container, Col, Row} from 'react-bootstrap';\r\n\r\n\r\nclass CreateDeck extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={{span:6, offset: 3}}>\r\n            <form className=\"demoForm\">\r\n             <h3 style={{marginTop: 25, marginBottom: 20}}>Create a Flashcard Deck</h3>\r\n             <div className=\"form-group\">\r\n               <label htmlFor=\"label\">Deck Name</label>\r\n               <input className=\"form-control\"\r\n                 name=\"newDeckName\" onChange={e => {this.props.onNewDeckChange(e)}}/>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <label htmlFor=\"description\">Description</label>\r\n               <textarea className=\"form-control\"\r\n                 name=\"newDeckDescription\" onChange={e => {this.props.onNewDeckChange(e)}} />\r\n             </div>\r\n             <Button variant=\"secondary\" type=\"submit\" className=\"btn btn-primary\" onClick={this.props.onAddDeck}>\r\n                Create Deck\r\n             </Button>\r\n           </form>\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default CreateDeck;\r\n","import React, { Component } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport {InputGroup} from 'react-bootstrap';\r\nimport {FormControl} from 'react-bootstrap';\r\nimport {Container} from 'react-bootstrap';\r\nimport {Row} from 'react-bootstrap';\r\nimport {Col} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass EditDeck extends Component {\r\n\r\n  render() {\r\n\r\n      return (\r\n\r\n      <Container>\r\n        <Row>\r\n          <Col md={{span:6, offset: 3}}>\r\n            <InputGroup className=\"mb-3 mt-3\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><strong>Deck Name:</strong> </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl name=\"name\" value={this.props.currentDeck.name}\r\n                onChange={(e)=>{this.props.onHandleDeckChange(e,this.props.currentDeck)}}\r\n              />\r\n            </InputGroup>\r\n            <InputGroup className=\"mb-4\">\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text><strong>Deck Description:</strong> </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <FormControl as=\"textarea\" name=\"description\" value={this.props.currentDeck.description}\r\n               onChange={(e)=>{this.props.onHandleDeckChange(e,this.props.currentDeck)}}/>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {this.props.currentDeck.cards.map((card,i)=>{\r\n\r\n            return (\r\n\r\n\r\n              <Row key={i}>\r\n                <Col md={{span:6, offset: 3}}>\r\n                  <Card className=\"mb-4\">\r\n                    <Card.Header><strong>Card {i + 1}</strong></Card.Header >\r\n                    <Card.Body>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text id=\"inputGroup-sizing-lg\"><strong>Term</strong> </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl as=\"textarea\" name=\"front\" value = {card.front}\r\n                      onChange = { e => this.props.onHandleCardChange(e,this.props.currentDeck,card)}\r\n                      aria-label=\"With textarea\" />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                          <InputGroup.Text id=\"inputGroup-sizing-lg\"><strong>Definition</strong>:</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl name=\"back\" value = {card.back}\r\n                     onChange = {e => this.props.onHandleCardChange(e,this.props.currentDeck,card)}\r\n                      as=\"textarea\" aria-label=\"With textarea\" />\r\n                      </InputGroup>\r\n                      <Button variant=\"outline-dark\" onClick={ e => { if (window.confirm('Are you sure you wish to delete this item?')) this.props.onDeleteCard(e,card)}\r\n                    }><FontAwesomeIcon icon={faTrash}/> Delete</Button>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n           )\r\n        })}\r\n\r\n        <Row>\r\n          <Col md={{span:6, offset: 3}}>\r\n            <form className=\"newCard\">\r\n             <h3>Add a Card to the Deck</h3>\r\n             <div className=\"form-group\">\r\n               <label htmlFor=\"label\">Term:</label>\r\n               <input className=\"form-control\"\r\n                 value = {this.props.newCardFront} name=\"newCardFront\" onChange={e => {this.props.onNewCardChange(e)}}/>\r\n             </div>\r\n             <div className=\"form-group\">\r\n               <label htmlFor=\"description\">Definition:</label>\r\n               <textarea className=\"form-control\" value = {this.props.newCardBack}\r\n                 name=\"newCardBack\" onChange={e => {this.props.onNewCardChange(e)}} />\r\n             </div>\r\n             <Button variant=\"secondary\" className=\"mb-3\" type=\"submit\" onClick={e=>{this.props.onCardAdd(e)}}>\r\n                Add Card\r\n             </Button>\r\n           </form>\r\n          </Col>\r\n\r\n        </Row>\r\n\r\n      </Container>\r\n\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport default EditDeck;\r\n","import React, { Component } from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport {Container} from 'react-bootstrap';\r\nimport {Row} from 'react-bootstrap';\r\nimport {Col} from 'react-bootstrap';\r\nimport {Button} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\n\r\nclass ViewDecks extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col md={{span: 6, offset: 3}}>\r\n          {this.props.decks.map((deck, i)=>{\r\n\r\n            return (\r\n                <Card key={i} className=\"mt-4\">\r\n                  <Card.Body>\r\n                    <Card.Title>{deck.name}</Card.Title>\r\n                    <Card.Text>{deck.description}</Card.Text>\r\n                    <Card.Text className=\"mt-3\"><strong>- {deck.cards.length} cards</strong></Card.Text>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                  <Button className=\"mt-1\" style={{marginRight: 10}} variant=\"outline-dark\" onClick={()=>{this.props.onEditDeck(deck)}}><FontAwesomeIcon icon={faEdit}/> Edit</Button>\r\n                  <Button className=\"mt-1\" style={{marginRight: 10}} variant=\"outline-dark\" onClick={(e) => { if (window.confirm('Are you sure you wish to delete this item?')) this.props.onDeleteDeck(e,deck) } }><FontAwesomeIcon icon={faTrash}/> Delete</Button>\r\n                  <Button className=\"mt-1\" style={{marginRight: 10}} variant=\"outline-dark\" onClick={()=>{this.props.onStudyDeck(deck)}}><FontAwesomeIcon icon={faBook}/> Study Deck</Button>\r\n                  </Card.Footer>\r\n                </Card>\r\n            )\r\n          })}\r\n          </Col>\r\n        </Row>\r\n\r\n        </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ViewDecks;\r\n","import {Card} from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\n\r\nexport default styled(Card)`\r\n\r\n  background-color: #f7e7ce;\r\n`;\r\n","import React, {Component} from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport {Card} from 'react-bootstrap';\r\nimport {Container} from 'react-bootstrap';\r\nimport {Row} from 'react-bootstrap';\r\nimport {Col} from 'react-bootstrap';\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport BgTitle from '../BgTitle';\r\n\r\n class StudyDeck extends Component {\r\n\r\n   state = {\r\n     cardIndex: 0,\r\n     isFlipped: false,\r\n     cardNumber: 1\r\n   }\r\n\r\n\r\n    handleCardChange = e => {\r\n\r\n      let name = e.target.name;\r\n\r\n      e.preventDefault()\r\n\r\n      if( name === \"flip\"){\r\n        this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\r\n      }\r\n\r\n      if(name === \"forward\"){\r\n\r\n        this.setState(prevState => {\r\n\r\n\r\n          return {cardIndex: prevState.cardIndex + 1, isFlipped: false, cardNumber: prevState.cardNumber + 1}\r\n\r\n        })\r\n\r\n      }\r\n\r\n      if (name === \"goBack\"){\r\n        this.setState(prevState => {\r\n\r\n          return {cardIndex: prevState.cardIndex - 1, isFlipped: false, cardNumber: prevState.cardNumber - 1}\r\n\r\n        })\r\n      }\r\n\r\n    }\r\n    render(){\r\n\r\n      return (\r\n        <Container>\r\n          <Row>\r\n            <Col md={{span:6, offset: 3}}>\r\n              <h3 style={{marginTop: 25, marginBottom: 20}}>Studying: {this.props.currentDeck.name}</h3>\r\n              <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"horizontal\">\r\n                <Card key=\"front\">\r\n                  <BgTitle className=\"card-header\" as=\"h4\" >Term:</BgTitle>\r\n                  <Card.Body>\r\n                    <Card.Title as=\"h4\" style={{minHeight: 150}} className=\"h-100 align-items-center justify-content-center d-flex\">\r\n                    {this.props.currentDeck.cards[this.state.cardIndex][\"front\"]}\r\n                    </Card.Title>\r\n                    <div className=\"text-right\">\r\n                      <Button variant=\"secondary\" name=\"flip\" onClick={(e)=>{this.handleCardChange(e)}}>Flip Card</Button>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n                <Card key=\"back\">\r\n                  <BgTitle className=\"card-header\" as=\"h4\">Definition:</BgTitle>\r\n                  <Card.Body>\r\n                    <Card.Title as=\"h4\" style={{minHeight: 150}} className=\"h-100 align-items-center justify-content-center d-flex\">\r\n                    {this.props.currentDeck.cards[this.state.cardIndex][\"back\"]}\r\n                    </Card.Title>\r\n                    <div className=\"text-right\">\r\n                      <Button variant=\"secondary\" name=\"flip\" onClick={(e)=>{this.handleCardChange(e)}}>Flip Card</Button>\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </ReactCardFlip>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={{span:6, offset: 3}} >\r\n            <div className=\"text-center\">\r\n              <Button style={{marginTop: 10, marginRight: 15}} variant=\"outline-dark\" className=\"center-block\" name=\"goBack\" disabled={this.state.cardIndex === 0} onClick={(e)=>{this.handleCardChange(e)}}>{\"<\"}</Button>\r\n              {this.state.cardNumber}/{this.props.currentDeck.cards.length}\r\n              <Button style={{marginTop: 10, marginLeft: 15}} variant=\"outline-dark\" disabled={this.state.cardIndex === this.props.currentDeck.cards.length - 1}\r\n              name=\"forward\"\r\n              onClick={(e)=>{this.handleCardChange(e)}}>{\">\"}</Button>\r\n            </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default StudyDeck;\r\n","export default class Deck {\r\n  cards = [];\r\n  constructor(name=\"Untitled\",description =\"no description given\"){\r\n    this.name = name;\r\n    this.description = description;\r\n  }\r\n\r\n}\r\n","export default class card {\r\n  constructor(front,back){\r\n    this.front = front;\r\n    this.back = back;\r\n  }\r\n\r\n}\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport CreateDeck from './components/createDeck';\nimport EditDeck from './components/editDeck';\nimport ViewDecks from './components/viewDecks';\nimport StudyDeck from './components/studyDeck';\nimport Deck from './deck'\nimport Card from './card'\nimport {Button, Col, Row, Container, Alert} from 'react-bootstrap';\nimport './App.css';\nimport styled from 'styled-components';\n\n\n\n\n\nconst StyledButton = styled(Button)`\n  color: palevioletred;\n  background-color: white;\n\tfont-size: 1em;\n\tmargin: 1em;\n\tpadding: 0.25em 1em;\n\tborder: 2px solid palevioletred;\n\tborder-radius: 3px;\n\n`;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isStudyDeckState: true,\n      isCreateState: false,\n      isEditDeckState: false,\n      isViewDecksState: false,\n      currentDeck:{name: \"Sample Deck\", cards: [{\n        front: \"Interpret\",\n        back: \"To execute a program in a high-level language by translating it one line at a time.\"},\n        {\n        front: \"Program\",\n        back: \"A set of instructions that specifies a computation.\"\n      },\n        {\n          front:\"Source code\",\n          back:\"A program in a high-level language.\"\n        }]} ,\n      newDeckName: \"\",\n      newDeckDescription: \"\",\n      newCardFront: \"\",\n      newCardBack: \"\",\n      decks: [\n        {name: \"Sample Deck\",description: \"A sample deck with programming terms\", cards: [{\n          front: \"Interpret\",\n          back: \"To execute a program in a high-level language by translating it one line at a time.\"},\n          {\n          front: \"Program\",\n          back: \"A set of instructions that specifies a computation.\"\n        },\n          {\n            front:\"Source code\",\n            back:\"A program in a high-level language.\"\n          }]}\n      ] }\n  }\n  componentDidMount() {\n    document.title = 'Flashcards';\n  }\n\n  addNewDeck = () => {\n    const deckName = this.state.newDeckName;\n    const deckDescription = this.state.newDeckDescription;\n    let createDeck = new Deck();\n    if(deckName !== \"\"){\n      createDeck.name = deckName\n    }\n    if(deckDescription !== \"\"){\n      createDeck.description = deckDescription\n    }\n\n    let {...newDeck} = createDeck;\n    let decks = [...this.state.decks, newDeck];\n    this.setState({\n        decks: decks,\n        newDeckName: '',\n        newDeckDescription: '',\n    });\n\n    this.triggerEditDeckState(newDeck)\n  }\n\n  addCardToDeck = (e) => {\n\n    this.setState(state => {\n\n      const decks = [...state.decks];\n      const index = decks.indexOf(state.currentDeck);\n      let createCard = new Card(state.newCardFront, state.newCardBack);\n      let {...newCard} = createCard;\n\n      let {...copyOfCurrentDeck} = state.currentDeck;\n      copyOfCurrentDeck.cards.push(newCard);\n      decks[index] = copyOfCurrentDeck;\n\n\n      return {\n        decks: decks,\n        currentDeck: copyOfCurrentDeck,\n        newCardFront: '',\n        newCardBack: '',\n      };\n    });\n\n    e.preventDefault();\n\n  }\n  deleteDeck = (e, deck) => {\n    const decks = this.state.decks.filter( d => d !== deck );\n    this.setState({decks})\n\n    e.preventDefault();\n  }\n\n  deleteCard = (e, card) => {\n    const decks = [...this.state.decks];\n    const index = decks.indexOf(this.state.currentDeck);\n    let {...copyOfCurrentDeck} = this.state.currentDeck;\n    const cards = this.state.currentDeck.cards.filter(c => c !== card );\n    copyOfCurrentDeck.cards = cards;\n    decks[index] = copyOfCurrentDeck;\n\n    this.setState({decks, currentDeck: copyOfCurrentDeck});\n  }\n\n  handleNewValuesAdded = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleDeckChange = (event,deck) => {\n    const decks = [...this.state.decks];\n    const index = decks.indexOf(deck);\n    const {...deckChanged} = deck;\n    decks[index] = deckChanged;\n    decks[index][event.target.name] = event.target.value;\n    this.setState({decks, currentDeck: decks[index]});\n  }\n\n  handleCardChange = (event,deck,card) => {\n      const decks = [...this.state.decks];\n      const index = decks.indexOf(deck);\n      const {...deckChanged} = deck;\n      decks[index] = deckChanged;\n      const index2 = decks[index].cards.indexOf(card);\n      decks[index].cards[index2][event.target.name] = event.target.value;\n      this.setState({decks, currentDeck: decks[index]});\n  }\n\n  triggerEditDeckState = (deck) => {\n\n    this.setState({\n      currentDeck: deck,\n      isCreateState: false,\n      isEditDeckState: true,\n      isViewDecksState: false,\n      isStudyDeckState: false,\n    })\n  }\n  triggerCreateState = () => {\n    this.setState({\n      isCreateState: true,\n      isEditDeckState: false,\n      isViewDecksState: false,\n      isStudyDeckState: false,\n    })\n  }\n  triggerStudyDeckState = deck => {\n    this.setState({\n      currentDeck: deck,\n      isCreateState: false,\n      isEditDeckState: false,\n      isViewDecksState: false,\n      isStudyDeckState: true,\n    });\n  }\n  triggerViewDecksState = () => {\n    this.setState({\n      isCreateState: false,\n      isEditDeckState: false,\n      isViewDecksState: true,\n      isStudyDeckState: false,\n    })\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <span>\n          <StyledButton variant=\"outline-secondary\" onClick={this.triggerCreateState}>\n            + Create New Flashcard Deck\n          </StyledButton>\n          <StyledButton variant=\"outline-secondary\" onClick={this.triggerViewDecksState}>\n              View Flashcard Decks\n          </StyledButton>\n        </span>\n        </header>\n\n          {this.state.isCreateState && <CreateDeck onNewDeckChange={this.handleNewValuesAdded} onAddDeck={this.addNewDeck}/>}\n\n          {this.state.isEditDeckState && <EditDeck decks={this.state.decks}\n          newCardFront={this.state.newCardFront} newCardBack={this.state.newCardBack}\n          onNewCardChange={this.handleNewValuesAdded} onCardAdd={this.addCardToDeck}\n          currentDeck={this.state.currentDeck} onHandleDeckChange={this.handleDeckChange}\n          onHandleCardChange={this.handleCardChange} onDeleteCard={this.deleteCard}\n           />}\n\n          {this.state.isViewDecksState && <ViewDecks decks={this.state.decks} onEditDeck={this.triggerEditDeckState} onDeleteDeck={this.deleteDeck} onStudyDeck={this.triggerStudyDeckState}/>}\n          {this.state.isStudyDeckState && <StudyDeck currentDeck={this.state.currentDeck} />}\n          {this.state.decks.length === 0 && this.state.isViewDecksState && <Container><Row><Col md={{span: 6, offset: 3}}><Alert variant=\"warning\" className=\"mt-5\">You currently have no Flashcard Decks. Click Create New Flashcard Deck to add one</Alert></Col></Row></Container>}\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}